/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
//    id 'java'
    id 'maven-publish'
//    id 'android'
}
apply plugin: 'com.android.library'
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.kotlin_module")
    }
}




repositories {
    mavenLocal()
    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}


dependencies {
//    implementation 'com.google.protobuf:protobuf-java:3.11.4'
    implementation 'org.xolstice.maven.plugins:protobuf-maven-plugin:0.6.1'
    implementation 'com.google.guava:guava:19.0'
    implementation 'joda-time:joda-time:2.3'
    implementation 'com.google.gdata:core:1.47.1'
    implementation 'com.google.auto.value:auto-value:1.5.3'
    annotationProcessor 'com.google.auto.value:auto-value:1.5.3'
    api 'com.google.protobuf:protobuf-javalite:3.9.1'
}


group = 'gps-measurement-tools'
version = '1.0-SNAPSHOT'
sourceCompatibility = '1.8'


//publishing {
//    publications {
//        maven(MavenPublication) {
//            from(components.java)
//        }
//    }
//}

sourceSets {
    main {
        java.srcDirs += "${project.rootDir}/target/generated-sources/annotations"
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.8.0-rc-1'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}